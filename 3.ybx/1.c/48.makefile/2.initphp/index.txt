=================================================================
gcc -c val.c
gcc -c get.c
gcc -c sum.c
gcc -c main.c
gcc -o main main.o val.o sum.o get.o
=================================================================
yum install make
[root@web11 2.initphp]# make -f 1.makefile
[root@web11 2.initphp]# make -f 1.makefile clean
=================================================================
4.makeifle:
PHONY 声明伪目标
可以用.PHONY来声明clean这样的不生成可执行文件的伪目标。可以看下Makefile改造后的例子
可以用.PHONY来声明clean这样的不生成可执行文件的伪目标
=================================================================
5.makefile:生成2个最终可执行文件
=================================================================
6.makefile:
$(MAKE) ：是make命令
$(CC) ：是gcc的命令
$@：可以获取到当前的目标
@echo： 这个命令是输出一行字符串。
make -s 则只显示echo输出的命令，不显示执行的命令行。
如果是多条命令的，可以通过换行来实现；如果是两条命令有关联，可以通过;号来分隔。
忽略命令的出错情况，可以在命令前面加 - 符号，例如：-rm -rf *.o

只输出echo的文字,生成main,并且删除.o文件
make  -f 6.makefile -s
it is compile main.c now!..............
