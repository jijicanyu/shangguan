http://blog.csdn.net/ruglcc/article/details/7814546/
使用函数

Makefile可以用函数来处理变量，从而让我们的命令或是规则更为的灵活和具有智能。
make所支持的函数也不算很多，不过已经足够我们的操作了。
函数调用后，函数的返回值可以当做变量来使用。

#############################################################################
一、函数的调用语法
函数调用，很像变量的使用，也是以“$”来标识的，其语法如下：
$(<function> <arguments> )
或是
${<function> <arguments>}

<function>就是函数名，make支持的函数不多。
<arguments>是函数的参数，参数间以逗号分隔
函数名和参数之间以空格分隔
函数调用以$开头，以圆括号或花括号把函数名和参数括起。
函数中的参数可以使用变量，函数和变量的括号最好一样，
如$(subst a,b,$(x))这样的形式，而不是“$(subst a,b,${x})”的形式。
#############################################################################
二、字符串处理函数
$(subst <from>,<to>,<text> )
名称：字符串替换函数——subst。
功能：把字串<text>中的<from>字符串替换成<to>。
返回：函数返回被替换过后的字符串。

$(patsubst <pattern>,<replacement>,<text> )
名称：模式字符串替换函数patsubst。
功能：查找<text>中的单词（单词以“空格”、“Tab”或“回车”“换行”分隔）是否符合模式<pattern>，
如果匹配，则以<replacement>替换。
<pattern>可以包括通配符“%”，表示任意长度的字串。
如果<replacement>中也包含“%”，那么，<replacement>中的这个“%”将是<pattern>中的那个“%”所代表的字串。
（可以用“\”来转义，以“\%”来表示真实含义的“%”字符）返回：函数返回被替换过后的字符串。

$(patsubst %.c,%.o,x.c.c bar.c)
把字串“x.c.c bar.c”符合模式[%.c]的单词替换成[%.o]，返回结果是“x.c.o bar.o”
这和我们前面“变量章节”说过的相关知识有点相似。如：
$(var:<pattern>=<replacement> )
相当于
$(patsubst <pattern>,<replacement>,$(var))
#############################################################################
#############################################################################
#############################################################################
