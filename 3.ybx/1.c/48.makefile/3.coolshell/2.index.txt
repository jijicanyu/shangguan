http://blog.csdn.net/ruglcc/article/details/7814546/

Makefile中的变量，像C/C++的宏，代表一个文本字串.
其与C/C++所不同的是，你可以在Makefile中改变其值。
在Makefile中，变量可以使用在“目标”，“依赖目标”，“命令”或是 Makefile的其它部分中。
变量的命名字可以包含字符、数字，下划线（可以是数字开头），
但不应该含有“:”、“#”、“=”或是空字符（空格、回车等）。
变量是大小写敏感的，“foo”、“Foo”和“FOO”是三个不同的变量名。
传统的Makefile的变量名是全大写的命名方式，但我推荐使用大小写搭配的变量名，如：MakeFlags。
这样可以避免和系统的变量冲突，而发生意外的事情。

一、变量的基础
变量在声明时需要给予初值，而在使用时，需要给在变量名前加上“$”符号，最好用（）或{}把变量给包括起来。
如果要用真实的“$”字符，那么你需要用“$$”来表示。
变量可以使用在许多地方，如规则中的“目标”、“依赖”、“命令”以及新的变量中。


######################################################################################
二、变量中的变量
1.Makefile中有两种方式来在用变量定义变量的值。

第一种方式: =号
右侧中的变量不一定非要是已定义好的值，其也可以使用后面定义的值
优点:
可以引用还没定义的变量
缺点:
可能会带来错误
例如:
A = $(B)
B = $(A)

第二种方式: := 操作符
这种方法，前面的变量不能使用后面的变量，只能使用前面已定义好了的变量
x := foo
y := $(x) bar
x := later
其等价于：
y := foo bar
x := later

2.系统变量“MAKELEVEL”，这个变量会记录了我们的当前Makefile的调用层数。

########################################################################################
三、变量高级用法
介绍两种变量的高级使用方法

第一种是变量值的替换:
make -f 1.var_value_replace
make -f make -f 2.var_value_replace

第二种高级用法是把变量的值再当成变量:
make -f 3.var_value_as_var_name
make -f 4.var_value_as_var_name
########################################################################################
四、追加变量值
########################################################################################
########################################################################################
########################################################################################
########################################################################################
########################################################################################
########################################################################################
########################################################################################
########################################################################################
########################################################################################
